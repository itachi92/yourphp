<?php
function onError($error_level= 0,$error_message='',$error_file='',$error_line = 0,$error_context = array(''))
{
	if (empty($error_level) || empty($error_message)) {
		// 执行set_error_handler("onError");前，必须先定义onError()方法
		return true;
	}

	$error = array();

	switch ($error_level) {
		case 1:
			$error['level']['value'] = "E_ERROR";
			$error['level']['description-en'] = "Fatal run-time errors. Errors that can not be recovered from. Execution of the script is halted";
			$error['level']['description-zh'] = "致命的运行时错误。无法恢复的错误。停止执行脚本";
			break;
		case 2:
			$error['level']['value'] = "E_WARNING";
			$error['level']['description-en'] = "Non-fatal run-time errors. Execution of the script is not halted";
			$error['level']['description-zh'] = "非致命的运行时错误。脚本的执行并没有停止";
			break;
		case 4:
			$error['level']['value'] = "E_PARSE";
			$error['level']['description-en'] = "Compile-time parse errors. Parse errors should only be generated by the parser";
			$error['level']['description-zh'] = "编译时分析错误。分析错误应该只由解析器生成";
			break;
		case 16:
			$error['level']['value'] = "E_CORE_ERROR";
			$error['level']['description-en'] = "Fatal errors at PHP startup. This is like an E_ERROR in the PHP core";
			$error['level']['description-zh'] = "在PHP启动致命错误。这就像是在PHP核心的一个e_error";
			break;
		case 32:
			$error['level']['value'] = "E_CORE_WARNING";
			$error['level']['description-en'] = "Non-fatal errors at PHP startup. This is like an E_WARNING in the PHP core";
			$error['level']['description-zh'] = "非致命错误在PHP启动。这就像是在PHP核心的一个e_warning";
			break;
		case 64:
			$error['level']['value'] = "E_COMPILE_ERROR";
			$error['level']['description-en'] = "Fatal compile-time errors. This is like an E_ERROR generated by the Zend Scripting Engine";
			$error['level']['description-zh'] = "致命编译时错误。这是由Zend脚本引擎产生的一个e_error";
			break;
		case 128:
			$error['level']['value'] = "E_COMPILE_WARNING";
			$error['level']['description-en'] = "Non-fatal compile-time errors. This is like an E_WARNING generated by the Zend Scripting Engine";
			$error['level']['description-zh'] = "非致命编译时错误。这是由Zend脚本引擎产生的一个e_warning";
			break;
		case 256:
			$error['level']['value'] = "E_USER_ERROR";
			$error['level']['description-en'] = "Fatal user-generated error. This is like an E_ERROR set by the programmer using the PHP function trigger_error()";
			$error['level']['description-zh'] = "致命用户生成错误。这是一个e_error使用PHP函数trigger_error()程序员";
			break;
		case 512:
			$error['level']['value'] = "E_USER_WARNING";
			$error['level']['description-en'] = "Non-fatal user-generated warning. This is like an E_WARNING set by the programmer using the PHP function trigger_error()";
			$error['level']['description-zh'] = "非致命用户生成警告。这是一个e_warning使用PHP函数trigger_error()程序员";
			break;
		case 1024:
			$error['level']['value'] = "E_USER_NOTICE";
			$error['level']['description-en'] = "User-generated notice. This is like an E_NOTICE set by the programmer using the PHP function trigger_error()";
			$error['level']['description-zh'] = "用户生成通知。这是一个e_notice使用PHP函数trigger_error()程序员";
			break;
		case 2048:
			$error['level']['value'] = "E_STRICT";
			$error['level']['description-en'] = "Run-time notices. PHP suggest changes to your code to help interoperability and compatibility of the code";
			$error['level']['description-zh'] = "运行时间通知。PHP建议改变你的代码有助于互操作性和兼容性的代码";
			break;
		case 4096:
			$error['level']['value'] = "E_RECOVERABLE_ERROR";
			$error['level']['description-en'] = "Catchable fatal error. This is like an E_ERROR but can be caught by a user defined handle (see also set_error_handler())";
			$error['level']['description-zh'] = "开捕的致命错误。这是一个e_error但可以通过一个用户定义的抓住手柄（参见set_error_handler()）";
			break;
		case 8091:
			$error['level']['value'] = "E_ALL";
			$error['level']['description-en'] = "All errors and warnings, except level E_STRICT (E_STRICT will be part of E_ALL as of PHP 6.0)";
			$error['level']['description-zh'] = "所有的错误和警告，除了水平e_strict（e_strict将部分e_all在PHP 6）";
			break;
		default:
			break;
	}

	$error['message'] = $error_message;
	$error['file'] = $error_file;
	$error['line'] = $error_line;
	$error['context'] = $error_context;

	echo "<pre>";
	print_r($error);
}
?>